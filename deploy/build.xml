<?xml version="1.0" encoding="UTF-8"?>
<project name="noteasaurus-deploy" default="usage" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:tomcat="antlib:org.apache.catalina.ant">
    <property file="../build.properties"/>

    <property name="project.name" value="noteasaurus"/>
    <property name="project.version" value="latest.integration"/>
    <property name="ivy.version" value="2.2.0-rc1"/>
    <property name="ivy.settings.dir" value="${ant.file.noteasaurus-deploy}/../../settings"/>
    <property name="ivy.settings.file" value="ivysettings.xml"/>

    <!-- The directory where 3rd party libraries are stored. -->
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    
    <property name="input.file.war" value="${lib.dir}/${project.name}.war"/>
    <property name="output.file.war" value="${dist.dir}/${project.name}.war"/>

    <!-- =========================================================================================================== -->
    <target name="deploy" depends="clean,redist">
        <fail unless="deploy.dir"/>
        <!--<fail unless="deploy.host"/>-->
        <!--<fail unless="deploy.remote_user"/>-->
        <fail unless="deploy.context"/>

        <exec executable="rsync" failonerror="true">
            <arg value="-v"/>
            <arg value="-e"/>
            <!--<arg value="ssh -l ${deploy.remote_user}"/>-->
            <arg value="${output.file.war}"/>
            <!--<arg value="${deploy.host}:${deploy.dir}/${deploy.context}.war"/>-->
            <arg value="${deploy.dir}/${deploy.context}.war"/>
        </exec>
    </target>

    <!-- =========================================================================================================== -->
    <!-- This is a useful utility for taking a distributable .war and rewriting
         its configuration parameters so that it can connect to a different database. -->
    <target name="redist" depends="configure-db,resolve">
        <fail unless="input.file.war"/>
        <fail unless="output.file.war"/>
        <fail unless="db.username"/>
        <fail unless="db.password"/>
        <fail unless="db.url"/>
        <fail unless="db.driver"/>
        
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${build.dir}"/>
        <unwar src="${input.file.war}" dest="${build.dir}"/>
        <propertyfile file="${build.dir}/WEB-INF/classes/config.properties">
            <entry key="db.driver" value="${db.driver}"/>
            <entry key="db.url" value="${db.url}"/>
            <entry key="db.username" value="${db.username}"/>
            <entry key="db.password" value="${db.password}"/>
        </propertyfile>
        <war basedir="${build.dir}" file="${output.file.war}"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="resolve" depends="ivy-settings" unless="resolve.no">
        <ivy:retrieve pattern="${input.file.war}" conf="war"/>
        <property name="resolve.no" value="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="clean" depends="ivy-settings">
        <ivy:cleancache/>
        <parallel>
            <delete dir="${lib.dir}"/>
            <delete dir="${dist.dir}"/>
            <delete dir="${build.dir}"/>
        </parallel>
    </target>

    <!-- =========================================================================================================== -->
    <target name="configure-db" unless="mysql.configured">
        <property name="db.name" value="noteasaurus"/>
        <property name="db.host" value="localhost"/>
        <property name="db.driver" value="com.mysql.jdbc.Driver"/>
        <property name="db.url" value="jdbc:mysql://${db.host}/${db.name}"/>
        <property name="db.username" value="noteasaurus"/>
        <property name="db.password" value="noteasaurus"/>
        <echo message="db.driver = ${db.driver}"/>
        <property name="mysql.configured" value="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <!-- =========================================================================================================== -->
    <!-- PRIVATE TARGETS, SHOULD NOT NEED TO USE THESE DIRECTLY                                                      -->
    <!-- =========================================================================================================== -->
    <!-- =========================================================================================================== -->

    <!-- =========================================================================================================== -->
    <target name="download-ivy" unless="ivy.available">
        <mkdir dir="../lib"/>
        <mkdir dir="../lib/ivy"/>
        <echo message="installing ivy..."/>
        <get src="http://ivy.metro-six.com/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="../lib/ivy/ivy-${ivy.version}.jar" usetimestamp="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="install-ivy" unless="ivy.installed">
        <available file="../lib/ivy/ivy-${ivy.version}.jar" property="ivy.available"/>
        <antcall target="download-ivy"/>
        <path id="ivy.lib.path">
            <fileset dir="../lib/ivy" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
        <property name="ivy.installed" value="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="ivy-settings" depends="install-ivy" unless="resolve.no">
        <fail unless="ivy.settings.dir"/>
        <fail unless="ivy.settings.file"/>
        <ivy:settings file="${ivy.settings.dir}/${ivy.settings.file}"/>
    </target>


</project>
